taskKey="com.codegym.task.task23.task2312.big05"\n\nSnake (part 5)


Now finish the SnakeDirection enum so that it contains the possible directions of the snake's movement.

Add 4 values: UP, DOWN, LEFT, RIGHT.

It should look something like this:
public enum SnakeDirection
{
UP,
RIGHT,
DOWN,
LEFT
}


Requirements:
1.	SnakeDirection must have an UP field.
2.	SnakeDirection must have a DOWN field.
3.	SnakeDirection must have a RIGHT field.
4.	SnakeDirection must have a LEFT field.


Snake (part 4)


You've already declared coordinates x and y in the Mouse class, but how do you access them?
Create proper getters for these fields and a constructor with two int parameters (x and y).



Snake (part 3)


Great. I also added the KeyboardObserver class, which we'll use later.
Study it carefully. It will come in handy.

Let's start with the simplest thing: the Mouse class.
The mouse won't move. It will have only coordinates and nothing else.
Add two private fields to the Mouse class: int x and int y.



Snake (part 2)


Now the most interesting thing is how the snake will be constructed.
Here's what we can say about the snake:
a) In fact, the snake is a set of sections or pieces. But we do know that one of them is the head.
b) The snake has a direction of movement.

This means we also need the following classes:
SnakeSection, which represents a piece of the snake.
SnakeDirection, which is an enum describing the snake's direction of movement.

Create the SnakeSection and SnakeDirection classes.



Snake (part 1)


Now let's write the "Snake" game.
To do this, we need:
a) the snake itself (Snake class)
b) the room where it slithers around (Room class)
c) the mouse that the snake will eat (Mouse class)

Create the Snake, Room, and Mouse classes

Don't forget to create the public static void main(String[] args) method in the Room class.




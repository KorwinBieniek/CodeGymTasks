taskKey="com.codegym.task.task29.task2909.big01"\n\nRefactoring (part 1)


It's time for a little refactoring. Wikipedia says, "Refactoring
or reorganizing code is the process of changing the internal structure of a program, without
affecting its external behavior and with an aim to making it easier to understand.
Refactoring is a sequence of small equivalent (i.e.
behavior preserving) transformations. Because each transformation is small,
the programmer can more easily track its correctness. At the same time, the whole
sequence can lead to a significant restructuring of the program and improve its
consistency and clarity." And we're going to do some of these small transformations.
After each change, check that the code still works.
A host of refactoring techniques have been repeatedly tried and proven by the community
of programmers. They been given their own names. Each task will be accompanied by the name
of a refactoring technique. You can also read more about it in Martin Fowler's book
"Refactoring: Improving the Design of Existing Code".
Let's begin. Carefully review the code in the human package.

Tasks:
1.1.	Pull up a field. Pull the children field up to the base class.
1.2.	Pull up a method. Pull the setter and getter for children up to the base class.
1.3.	Encapsulate a collection.
1.3.1.	The getChildren method should return an immutable representation of the children list.
1.3.2.	Remove the setter for children.
1.3.3.	Add addChild(Human) and removeChild(Human) methods. Implement their logic.


Requirements:
1.	The children field must be located in the Human class. It must not be located in the Teacher or Student classes.
2.	The setter and getter for the children field must be located in the Human class, and must not be located in the Teacher or Student classes.
3.	The getChildren() method in the Human class should return Collections.unmodifiableList(children).
4.	You must remove the setChildren() method from the Human class.
5.	You must add addChild(Human) and removeChild(Human) methods to the Human class, and implement them.



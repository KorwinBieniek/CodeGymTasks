taskKey="com.codegym.task.task35.task3513.big02"\n\n2048 (part 2)


In the game 2048 game, the board consists of 16 tiles, each of which has a certain weight.
In addition to weight, a tile has its own color and text color used to display the tile's weight.
Tile colors range from light gray to red, and the text color depends on the color of the tile.

Create a Tile class that will describe a single tile.
It will need the following:
1. An int value field with default access.
2. A constructor with a parameter that initializes the value field.
3. A constructor without parameters (initializes the value field to zero).
4. An isEmpty method that returns true if the value field is 0, otherwise false.
5. A getFontColor method that returns a new Color object (0x776e65)
if the tile weight is less than 16, otherwise 0xf9f6f2.
6. The getTileColor method, which returns the color of a tile depending on its weight, according to the
following values:
0:    (0xcdc1b4);
2:    (0xeee4da);
4:    (0xede0c8);
8:    (0xf2b179);
16:   (0xf59563);
32:   (0xf67c5f);
64:   (0xf65e3b);
128:  (0xedcf72);
256:  (0xedcc61);
512:  (0xedc850);
1024: (0xedc53f);
2048: (0xedc22e);

for any other values: (0xff0000).

The methods listed above should not be private.


Requirements:
1.	The Tile class must have an int value field with default access.
2.	The Tile class constructor with one int parameter must initialize the value field.
3.	When a Tile object is created using the no-argument constructor, the value field must be zero.
4.	The isEmpty method must return true if the value field is 0, otherwise false.
5.	The getFontColor method must be implemented in accordance with the task conditions.
6.	The getTileColor method should return the color of a tile depending on its weight.


2048 (part 1)


Hi! I hope you've grown tired of ordinary tasks and are eagerly anticipating a big one!
Today we'll write a Java implementation of the game 2048. In short, if you haven't heard anything about this game, the goal is
to get a tile with a value of 2048 on a 4x4 board. You can read more on Wikipedia:
https://en.wikipedia.org/wiki/2048_(video_game)

To begin, we're going to need the following classes:
1. Controller - It will monitor keystrokes during the game.
2. Model - It will contain the game logic and store the game board.
3. View - It will provide a view of the current state of the game.
4. Main - It will contain only the main method, serving as the entry point for our application.

Create them!




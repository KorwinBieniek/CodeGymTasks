taskKey="com.codegym.task.task21.task2113.big09"\n\nHippodrome (part 9)


Now let's return to the move and print methods. Let's start with move.
In the Hippodrome class's move method, we call the move method on each horse in the loop.

Yes, you're right: the Horse class doesn't have it yet.
This means you need to add your own move method to the Horse class. :)
Oh, and the print method, too.
If I don't say anything about a method's parameters, then the method doesn't have any parameters.
Make all of the methods public unless indicated otherwise.



Requirements:
1.	The move method must be created in the Horse class.
2.	The print method must be created in the Horse class.
3.	In the Hippodrome class&#39;s move method, the move method must be called once on each horse (each element of the horses list).


Hippodrome (part 8)


Make a loop from 1 to 100 in the run method. This will be our race.
In the body of the loop, we'll call move first, then print.
To prevent the whole loop from finishing in a split second, add Thread.sleep(200); as well.



Hippodrome (part 7)


But that's not all. We need to make the horses run.
Add run, move, and print methods to the Hippodrome class. Without parameters.
The move method will control the movement of all horses.
The print method will draw them on the screen.
And the run method manages it all.



Hippodrome (part 6)


Now let's move on to the Hippodrome class and the main method.
We need to create a Hippodrome object and add some horses to it.

To start, in the Hippodrome class:
Create a static Hippodrome game field.

The main method requires the following:
a) Create a Hippodrome object and save it in the game field.
b) Create three Horse objects. Make up their names yourself. Each horse's initial speed is 3, and its distance is 0.
c) Add the created horses to the hippodrome's list of horses (horses). You can use the getHorses method to get the list of horses.



Hippodrome (part 5)


Finish writing the Horse class.
Add a constructor with name, speed, and distance parameters.
Add getters and setters for all the fields in the Horse class.
Make all of the methods public unless indicated otherwise.



Hippodrome (part 4)


Now back to the horses. Every horse in a horse race must have a name and speed.
Our horses will simply run a certain amount of time (100 seconds or "steps").
The horse that runs the farthest is the winner.
Accordingly, we'll also need to store the distance the horse has already run.

Add String name, double speed, and double distance variables to the Horse class.



